<?php return array (
  'vehicle_class' => 'encryptedVehicle',
  'abort_install_on_vehicle_fail' => true,
  'unique_key' => 'category',
  'preserve_keys' => false,
  'update_object' => true,
  'related_objects' => 
  array (
    'Chunks' => 
    array (
      '91a1eb54e5fdaa99f1af766f5dab813d' => 
      array (
        'preserve_keys' => false,
        'update_object' => false,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":0,"source":1,"property_preprocess":0,"name":"tpl.ms2Gallery","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"<div class=\\"ms2Gallery\\">\\n    {if $files?}\\n        <div class=\\"fotorama\\"\\n             data-nav=\\"thumbs\\"\\n             data-thumbheight=\\"45\\"\\n             data-allowfullscreen=\\"true\\"\\n             data-swipe=\\"true\\"\\n             data-autoplay=\\"5000\\">\\n            {foreach $files as $file}\\n                <a href=\\"{$file[\'url\']}\\" target=\\"_blank\\">\\n                    <img src=\\"{$file[\'small\']}\\" alt=\\"{$file[\'name\']}\\" title=\\"{$file[\'name\']}\\">\\n                <\\/a>\\n            {\\/foreach}\\n        <\\/div>\\n    {else}\\n        <img src=\\"{(\'assets_url\' | option) ~ \'components\\/ms2gallery\\/img\\/web\\/ms2_medium.png\'}\\" alt=\\"\\" title=\\"\\"\\/>\\n    {\\/if}\\n<\\/div>","locked":0,"properties":null,"static":0,"static_file":"core\\/components\\/ms2gallery\\/elements\\/chunks\\/chunk.ms2gallery.tpl","content":"<div class=\\"ms2Gallery\\">\\n    {if $files?}\\n        <div class=\\"fotorama\\"\\n             data-nav=\\"thumbs\\"\\n             data-thumbheight=\\"45\\"\\n             data-allowfullscreen=\\"true\\"\\n             data-swipe=\\"true\\"\\n             data-autoplay=\\"5000\\">\\n            {foreach $files as $file}\\n                <a href=\\"{$file[\'url\']}\\" target=\\"_blank\\">\\n                    <img src=\\"{$file[\'small\']}\\" alt=\\"{$file[\'name\']}\\" title=\\"{$file[\'name\']}\\">\\n                <\\/a>\\n            {\\/foreach}\\n        <\\/div>\\n    {else}\\n        <img src=\\"{(\'assets_url\' | option) ~ \'components\\/ms2gallery\\/img\\/web\\/ms2_medium.png\'}\\" alt=\\"\\" title=\\"\\"\\/>\\n    {\\/if}\\n<\\/div>"}',
        'guid' => 'e1564e291498002b92eb6d272bce290b',
        'native_key' => 0,
        'signature' => '6d437b58ca1dc9e115deacb2dcd97843',
      ),
    ),
    'Snippets' => 
    array (
      'f00e1562525ede759d8fb0fffee37240' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":0,"source":1,"property_preprocess":0,"name":"ms2Gallery","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/** @var array $scriptProperties *\\/\\n\\/** @var ms2Gallery $ms2Gallery *\\/\\n$ms2Gallery = $modx->getService(\'ms2gallery\', \'ms2Gallery\', MODX_CORE_PATH . \'components\\/ms2gallery\\/model\\/ms2gallery\\/\');\\n\\/** @var pdoFetch $pdoFetch *\\/\\nif (!$modx->loadClass(\'pdofetch\', MODX_CORE_PATH . \'components\\/pdotools\\/model\\/pdotools\\/\', false, true)) {\\n    return false;\\n}\\n$pdoFetch = new pdoFetch($modx, $scriptProperties);\\n$extDir = $modx->getOption(\'extensionsDir\', $scriptProperties, \'components\\/ms2gallery\\/img\\/mgr\\/extensions\\/\', true);\\n$fenom = !empty($scriptProperties[\'tpl\']);\\n\\n\\/\\/ Register styles and scripts on frontend\\n$config = $pdoFetch->makePlaceholders($ms2Gallery->config);\\n$css = $modx->getOption(\'frontend_css\', $scriptProperties, \'frontend_css\');\\nif (!empty($css) && preg_match(\'#\\\\.css#i\', $css)) {\\n    $modx->regClientCSS(str_replace($config[\'pl\'], $config[\'vl\'], $css));\\n}\\n$js = $modx->getOption(\'frontend_js\', $scriptProperties, \'frontend_js\');\\nif (!empty($js) && preg_match(\'#\\\\.js#i\', $js)) {\\n    $tmp = json_encode(array(\\n        \'cssUrl\' => $ms2Gallery->config[\'cssUrl\'] . \'web\\/\',\\n        \'jsUrl\' => $ms2Gallery->config[\'jsUrl\'] . \'web\\/\',\\n    ));\\n    $modx->regClientScript(\'<script type=\\"text\\/javascript\\">ms2GalleryConfig=\' . $tmp . \';<\\/script>\');\\n    $modx->regClientScript(str_replace($config[\'pl\'], $config[\'vl\'], $js));\\n}\\nif (empty($outputSeparator)) {\\n    $outputSeparator = \\"\\\\n\\";\\n}\\nif (empty($tagsSeparator)) {\\n    $tagsSeparator = \',\';\\n}\\n\\n$where = array(\\n    \'File.parent\' => 0,\\n);\\n\\n\\/\\/ Define where parameters\\nif ($scriptProperties[\'parents\'] == \'\' && empty($scriptProperties[\'resources\'])) {\\n    $resources = !empty($resource)\\n        ? $resource\\n        : $modx->resource->get(\'id\');\\n    $scriptProperties[\'resources\'] = $resources;\\n}\\n\\nif (!empty($filetype)) {\\n    $where[\'File.type:IN\'] = array_map(\'trim\', explode(\',\', $filetype));\\n}\\n\\nif (empty($showInactive)) {\\n    $where[\'File.active\'] = 1;\\n}\\n\\n$innerJoin = array(\\n    \'File\' => array(\\n        \'class\' => \'msResourceFile\',\\n        \'on\' => \'File.resource_id = modResource.id\',\\n    ),\\n);\\nif (!empty($tagsVar) && isset($_REQUEST[$tagsVar])) {\\n    $tags = $modx->stripTags($_REQUEST[$tagsVar]);\\n}\\nif (!empty($tags)) {\\n    $tags = array_map(\'trim\', explode(\',\', str_replace(\'\\"\', \'\', $tags)));\\n    $tags = implode(\'\\",\\"\', $tags);\\n    $innerJoin[\'Tag\'] = array(\\n        \'class\' => \'msResourceFileTag\',\\n        \'on\' => \'Tag.file_id = File.id AND Tag.tag IN (\\"\' . $tags . \'\\")\',\\n    );\\n}\\n\\n$select = array(\\n    \'File\' => \'*\',\\n);\\n\\n\\/\\/ Set default sort by File table\\nif (!empty($sortby)) {\\n    $sortby = array_map(\'trim\', explode(\',\', $sortby));\\n    foreach ($sortby as &$value) {\\n        if (strpos($value, \'.\') === false && strpos($value, \'(\') === false) {\\n            $value = \'File.\' . $value;\\n        }\\n    }\\n    $scriptProperties[\'sortby\'] = implode(\', \', $sortby);\\n}\\n\\n\\/\\/ Process additional query params\\nforeach (array(\'where\', \'innerJoin\', \'select\') as $v) {\\n    if (!empty($scriptProperties[$v])) {\\n        $tmp = json_decode($scriptProperties[$v], true);\\n        if (is_array($tmp)) {\\n            $$v = array_merge($$v, $tmp);\\n        }\\n    }\\n    unset($scriptProperties[$v]);\\n}\\n\\nif (empty($limit) && !empty($offset)) {\\n    $scriptProperties[\'limit\'] = 10000;\\n}\\n\\n\\/\\/ Default parameters\\n$default = array(\\n    \'class\' => \'modResource\',\\n    \'innerJoin\' => $innerJoin,\\n    \'where\' => json_encode($where),\\n    \'select\' => $select,\\n    \'limit\' => 10,\\n    \'sortby\' => \'rank\',\\n    \'sortdir\' => \'ASC\',\\n    \'fastMode\' => false,\\n    \'groupby\' => \'File.id\',\\n    \'return\' => \'data\',\\n    \'nestedChunkPrefix\' => \'ms2gallery_\',\\n);\\n\\n\\/\\/ Merge all properties and run!\\nif (empty($scriptProperties[\'tpl\']) && !empty($tplRow)) {\\n    $scriptProperties[\'tpl\'] = $tplRow;\\n}\\n$pdoFetch->setConfig(array_merge($default, $scriptProperties));\\n$rows = $pdoFetch->run();\\n\\nif (!empty($rows)) {\\n    $tmp = current($rows);\\n    $resolution = array();\\n    \\/** @var modMediaSource $mediaSource *\\/\\n    if ($mediaSource = $modx->getObject(\'sources.modMediaSource\', $tmp[\'source\'])) {\\n        $properties = $mediaSource->getProperties();\\n        if (isset($properties[\'thumbnails\'][\'value\'])) {\\n            $fileTypes = json_decode($properties[\'thumbnails\'][\'value\'], true);\\n            foreach ($fileTypes as $k => $v) {\\n                if (!is_numeric($k)) {\\n                    $resolution[] = $k;\\n                } elseif (!empty($v[\'name\'])) {\\n                    $resolution[] = $v[\'name\'];\\n                } else {\\n                    $resolution[] = @$v[\'w\'] . \'x\' . @$v[\'h\'];\\n                }\\n            }\\n        }\\n    }\\n}\\n\\n\\/\\/ Processing rows\\n$output = null;\\n$images = array();\\nforeach ($rows as $k => $row) {\\n    $row[\'idx\'] = $pdoFetch->idx++;\\n    $row[\'tags\'] = \'\';\\n\\n    if (!empty($row[\'type\'])) {\\n        if ($row[\'type\'] == \'image\') {\\n            $previews = $pdoFetch->getCollection(\'msResourceFile\', array(\'parent\' => $row[\'id\']));\\n            foreach ($previews as $preview) {\\n                if (preg_match(\\"#\\/{$preview[\'resource_id\']}\\/(.*?)\\/#\\", $preview[\'url\'], $size)) {\\n                    $row[$size[1]] = !empty($getPreviewProperties)\\n                        ? $preview\\n                        : $preview[\'url\'];\\n                }\\n            }\\n        } else {\\n            $row[\'thumbnail\'] = file_exists(MODX_ASSETS_PATH . $extDir . $row[\'type\'] . \'.png\')\\n                ? MODX_ASSETS_URL . $extDir . $row[\'type\'] . \'.png\'\\n                : MODX_ASSETS_URL . $extDir . \'other.png\';\\n            if (!empty($resolution)) {\\n                foreach ($resolution as $v) {\\n                    $row[$v] = $row[\'thumbnail\'];\\n                }\\n            }\\n        }\\n    }\\n\\n\\n    if (!empty($getTags)) {\\n        $q = $modx->newQuery(\'msResourceFileTag\', array(\'file_id\' => $row[\'id\']));\\n        $q->select(\'tag\');\\n        $tstart = microtime(true);\\n        if ($q->prepare() && $q->stmt->execute()) {\\n            $modx->queryTime += microtime(true) - $tstart;\\n            $modx->executedQueries++;\\n            $row[\'tags\'] = implode($tagsSeparator, $q->stmt->fetchAll(PDO::FETCH_COLUMN));\\n        }\\n    }\\n\\n    $images[] = $row;\\n}\\n$pdoFetch->addTime(!empty($getTags) ? \'Thumbnails and tags was retrieved\' : \'Thumbnails was retrieved\');\\n\\n\\/\\/ Processing chunks\\n$output = array();\\nif ($fenom) {\\n    $output[] = $pdoFetch->getChunk($tpl, array(\\n        \'files\' => $images,\\n        \'images\' => $images,\\n    ));\\n} else {\\n    foreach ($images as $row) {\\n        $tpl = $pdoFetch->defineChunk($row);\\n\\n        $output[] = empty($tpl)\\n            ? \'<pre>\' . $pdoFetch->getChunk(\'\', $row) . \'<\\/pre>\'\\n            : $pdoFetch->getChunk($tpl, $row, $pdoFetch->config[\'fastMode\']);\\n    }\\n}\\n$pdoFetch->addTime(\'Rows was templated\');\\n\\n\\/\\/ Return output\\n$log = \'\';\\nif ($modx->user->hasSessionContext(\'mgr\') && !empty($showLog)) {\\n    $log .= \'<pre class=\\"ms2GalleryLog\\">\' . print_r($pdoFetch->getTime(), 1) . \'<\\/pre>\';\\n}\\n\\nif (!$fenom) {\\n    if (!empty($toSeparatePlaceholders)) {\\n        $output[\'log\'] = $log;\\n        $modx->setPlaceholders($output, $toSeparatePlaceholders);\\n\\n        return;\\n    }\\n    if (count($output) === 1 && !empty($tplSingle)) {\\n        $output = $pdoFetch->getChunk($tplSingle, array_shift($images));\\n    } else {\\n        $output = implode($outputSeparator, $output);\\n\\n        if (!empty($output)) {\\n            $arr = array_shift($images);\\n            $arr[\'rows\'] = $output;\\n            $arr[\'images\'] = $images;\\n            if (!empty($tplOuter)) {\\n                $output = $pdoFetch->getChunk($tplOuter, $arr);\\n            }\\n        } else {\\n            $output = !empty($tplEmpty)\\n                ? $pdoFetch->getChunk($tplEmpty)\\n                : \'\';\\n        }\\n    }\\n}\\n\\nif (is_array($output)) {\\n    $output = implode($outputSeparator, $output);\\n}\\n$output .= $log;\\nif (!empty($toPlaceholder)) {\\n    $modx->setPlaceholder($toPlaceholder, $output);\\n} else {\\n    return $output;\\n}","locked":0,"properties":"a:19:{s:7:\\"parents\\";a:7:{s:4:\\"name\\";s:7:\\"parents\\";s:4:\\"desc\\";s:23:\\"ms2gallery_prop_parents\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:21:\\"ms2gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"resources\\";a:7:{s:4:\\"name\\";s:9:\\"resources\\";s:4:\\"desc\\";s:25:\\"ms2gallery_prop_resources\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:21:\\"ms2gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"showLog\\";a:7:{s:4:\\"name\\";s:7:\\"showLog\\";s:4:\\"desc\\";s:23:\\"ms2gallery_prop_showLog\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:21:\\"ms2gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"toPlaceholder\\";a:7:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:29:\\"ms2gallery_prop_toPlaceholder\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:21:\\"ms2gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:3:\\"tpl\\";a:7:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:19:\\"ms2gallery_prop_tpl\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:14:\\"tpl.ms2Gallery\\";s:7:\\"lexicon\\";s:21:\\"ms2gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"limit\\";a:7:{s:4:\\"name\\";s:5:\\"limit\\";s:4:\\"desc\\";s:21:\\"ms2gallery_prop_limit\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";i:0;s:7:\\"lexicon\\";s:21:\\"ms2gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"offset\\";a:7:{s:4:\\"name\\";s:6:\\"offset\\";s:4:\\"desc\\";s:22:\\"ms2gallery_prop_offset\\";s:4:\\"type\\";s:11:\\"numberfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";i:0;s:7:\\"lexicon\\";s:21:\\"ms2gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"where\\";a:7:{s:4:\\"name\\";s:5:\\"where\\";s:4:\\"desc\\";s:21:\\"ms2gallery_prop_where\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:21:\\"ms2gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"filetype\\";a:7:{s:4:\\"name\\";s:8:\\"filetype\\";s:4:\\"desc\\";s:24:\\"ms2gallery_prop_filetype\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:21:\\"ms2gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"showInactive\\";a:7:{s:4:\\"name\\";s:12:\\"showInactive\\";s:4:\\"desc\\";s:28:\\"ms2gallery_prop_showInactive\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:21:\\"ms2gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"sortby\\";a:7:{s:4:\\"name\\";s:6:\\"sortby\\";s:4:\\"desc\\";s:22:\\"ms2gallery_prop_sortby\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:4:\\"rank\\";s:7:\\"lexicon\\";s:21:\\"ms2gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"sortdir\\";a:7:{s:4:\\"name\\";s:7:\\"sortdir\\";s:4:\\"desc\\";s:23:\\"ms2gallery_prop_sortdir\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:3:\\"ASC\\";s:5:\\"value\\";s:3:\\"ASC\\";}i:1;a:2:{s:4:\\"text\\";s:4:\\"DESC\\";s:5:\\"value\\";s:4:\\"DESC\\";}}s:5:\\"value\\";s:3:\\"ASC\\";s:7:\\"lexicon\\";s:21:\\"ms2gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"frontend_css\\";a:7:{s:4:\\"name\\";s:12:\\"frontend_css\\";s:4:\\"desc\\";s:28:\\"ms2gallery_prop_frontend_css\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:26:\\"[[+cssUrl]]web\\/default.css\\";s:7:\\"lexicon\\";s:21:\\"ms2gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"frontend_js\\";a:7:{s:4:\\"name\\";s:11:\\"frontend_js\\";s:4:\\"desc\\";s:27:\\"ms2gallery_prop_frontend_js\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:24:\\"[[+jsUrl]]web\\/default.js\\";s:7:\\"lexicon\\";s:21:\\"ms2gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:4:\\"tags\\";a:7:{s:4:\\"name\\";s:4:\\"tags\\";s:4:\\"desc\\";s:20:\\"ms2gallery_prop_tags\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:21:\\"ms2gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"tagsVar\\";a:7:{s:4:\\"name\\";s:7:\\"tagsVar\\";s:4:\\"desc\\";s:23:\\"ms2gallery_prop_tagsVar\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:21:\\"ms2gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"getTags\\";a:7:{s:4:\\"name\\";s:7:\\"getTags\\";s:4:\\"desc\\";s:23:\\"ms2gallery_prop_getTags\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:21:\\"ms2gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"tagsSeparator\\";a:7:{s:4:\\"name\\";s:13:\\"tagsSeparator\\";s:4:\\"desc\\";s:29:\\"ms2gallery_prop_tagsSeparator\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:1:\\",\\";s:7:\\"lexicon\\";s:21:\\"ms2gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:20:\\"getPreviewProperties\\";a:7:{s:4:\\"name\\";s:20:\\"getPreviewProperties\\";s:4:\\"desc\\";s:36:\\"ms2gallery_prop_getPreviewProperties\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:21:\\"ms2gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"core\\/components\\/ms2gallery\\/elements\\/snippets\\/snippet.ms2gallery.php","content":"\\/** @var array $scriptProperties *\\/\\n\\/** @var ms2Gallery $ms2Gallery *\\/\\n$ms2Gallery = $modx->getService(\'ms2gallery\', \'ms2Gallery\', MODX_CORE_PATH . \'components\\/ms2gallery\\/model\\/ms2gallery\\/\');\\n\\/** @var pdoFetch $pdoFetch *\\/\\nif (!$modx->loadClass(\'pdofetch\', MODX_CORE_PATH . \'components\\/pdotools\\/model\\/pdotools\\/\', false, true)) {\\n    return false;\\n}\\n$pdoFetch = new pdoFetch($modx, $scriptProperties);\\n$extDir = $modx->getOption(\'extensionsDir\', $scriptProperties, \'components\\/ms2gallery\\/img\\/mgr\\/extensions\\/\', true);\\n$fenom = !empty($scriptProperties[\'tpl\']);\\n\\n\\/\\/ Register styles and scripts on frontend\\n$config = $pdoFetch->makePlaceholders($ms2Gallery->config);\\n$css = $modx->getOption(\'frontend_css\', $scriptProperties, \'frontend_css\');\\nif (!empty($css) && preg_match(\'#\\\\.css#i\', $css)) {\\n    $modx->regClientCSS(str_replace($config[\'pl\'], $config[\'vl\'], $css));\\n}\\n$js = $modx->getOption(\'frontend_js\', $scriptProperties, \'frontend_js\');\\nif (!empty($js) && preg_match(\'#\\\\.js#i\', $js)) {\\n    $tmp = json_encode(array(\\n        \'cssUrl\' => $ms2Gallery->config[\'cssUrl\'] . \'web\\/\',\\n        \'jsUrl\' => $ms2Gallery->config[\'jsUrl\'] . \'web\\/\',\\n    ));\\n    $modx->regClientScript(\'<script type=\\"text\\/javascript\\">ms2GalleryConfig=\' . $tmp . \';<\\/script>\');\\n    $modx->regClientScript(str_replace($config[\'pl\'], $config[\'vl\'], $js));\\n}\\nif (empty($outputSeparator)) {\\n    $outputSeparator = \\"\\\\n\\";\\n}\\nif (empty($tagsSeparator)) {\\n    $tagsSeparator = \',\';\\n}\\n\\n$where = array(\\n    \'File.parent\' => 0,\\n);\\n\\n\\/\\/ Define where parameters\\nif ($scriptProperties[\'parents\'] == \'\' && empty($scriptProperties[\'resources\'])) {\\n    $resources = !empty($resource)\\n        ? $resource\\n        : $modx->resource->get(\'id\');\\n    $scriptProperties[\'resources\'] = $resources;\\n}\\n\\nif (!empty($filetype)) {\\n    $where[\'File.type:IN\'] = array_map(\'trim\', explode(\',\', $filetype));\\n}\\n\\nif (empty($showInactive)) {\\n    $where[\'File.active\'] = 1;\\n}\\n\\n$innerJoin = array(\\n    \'File\' => array(\\n        \'class\' => \'msResourceFile\',\\n        \'on\' => \'File.resource_id = modResource.id\',\\n    ),\\n);\\nif (!empty($tagsVar) && isset($_REQUEST[$tagsVar])) {\\n    $tags = $modx->stripTags($_REQUEST[$tagsVar]);\\n}\\nif (!empty($tags)) {\\n    $tags = array_map(\'trim\', explode(\',\', str_replace(\'\\"\', \'\', $tags)));\\n    $tags = implode(\'\\",\\"\', $tags);\\n    $innerJoin[\'Tag\'] = array(\\n        \'class\' => \'msResourceFileTag\',\\n        \'on\' => \'Tag.file_id = File.id AND Tag.tag IN (\\"\' . $tags . \'\\")\',\\n    );\\n}\\n\\n$select = array(\\n    \'File\' => \'*\',\\n);\\n\\n\\/\\/ Set default sort by File table\\nif (!empty($sortby)) {\\n    $sortby = array_map(\'trim\', explode(\',\', $sortby));\\n    foreach ($sortby as &$value) {\\n        if (strpos($value, \'.\') === false && strpos($value, \'(\') === false) {\\n            $value = \'File.\' . $value;\\n        }\\n    }\\n    $scriptProperties[\'sortby\'] = implode(\', \', $sortby);\\n}\\n\\n\\/\\/ Process additional query params\\nforeach (array(\'where\', \'innerJoin\', \'select\') as $v) {\\n    if (!empty($scriptProperties[$v])) {\\n        $tmp = json_decode($scriptProperties[$v], true);\\n        if (is_array($tmp)) {\\n            $$v = array_merge($$v, $tmp);\\n        }\\n    }\\n    unset($scriptProperties[$v]);\\n}\\n\\nif (empty($limit) && !empty($offset)) {\\n    $scriptProperties[\'limit\'] = 10000;\\n}\\n\\n\\/\\/ Default parameters\\n$default = array(\\n    \'class\' => \'modResource\',\\n    \'innerJoin\' => $innerJoin,\\n    \'where\' => json_encode($where),\\n    \'select\' => $select,\\n    \'limit\' => 10,\\n    \'sortby\' => \'rank\',\\n    \'sortdir\' => \'ASC\',\\n    \'fastMode\' => false,\\n    \'groupby\' => \'File.id\',\\n    \'return\' => \'data\',\\n    \'nestedChunkPrefix\' => \'ms2gallery_\',\\n);\\n\\n\\/\\/ Merge all properties and run!\\nif (empty($scriptProperties[\'tpl\']) && !empty($tplRow)) {\\n    $scriptProperties[\'tpl\'] = $tplRow;\\n}\\n$pdoFetch->setConfig(array_merge($default, $scriptProperties));\\n$rows = $pdoFetch->run();\\n\\nif (!empty($rows)) {\\n    $tmp = current($rows);\\n    $resolution = array();\\n    \\/** @var modMediaSource $mediaSource *\\/\\n    if ($mediaSource = $modx->getObject(\'sources.modMediaSource\', $tmp[\'source\'])) {\\n        $properties = $mediaSource->getProperties();\\n        if (isset($properties[\'thumbnails\'][\'value\'])) {\\n            $fileTypes = json_decode($properties[\'thumbnails\'][\'value\'], true);\\n            foreach ($fileTypes as $k => $v) {\\n                if (!is_numeric($k)) {\\n                    $resolution[] = $k;\\n                } elseif (!empty($v[\'name\'])) {\\n                    $resolution[] = $v[\'name\'];\\n                } else {\\n                    $resolution[] = @$v[\'w\'] . \'x\' . @$v[\'h\'];\\n                }\\n            }\\n        }\\n    }\\n}\\n\\n\\/\\/ Processing rows\\n$output = null;\\n$images = array();\\nforeach ($rows as $k => $row) {\\n    $row[\'idx\'] = $pdoFetch->idx++;\\n    $row[\'tags\'] = \'\';\\n\\n    if (!empty($row[\'type\'])) {\\n        if ($row[\'type\'] == \'image\') {\\n            $previews = $pdoFetch->getCollection(\'msResourceFile\', array(\'parent\' => $row[\'id\']));\\n            foreach ($previews as $preview) {\\n                if (preg_match(\\"#\\/{$preview[\'resource_id\']}\\/(.*?)\\/#\\", $preview[\'url\'], $size)) {\\n                    $row[$size[1]] = !empty($getPreviewProperties)\\n                        ? $preview\\n                        : $preview[\'url\'];\\n                }\\n            }\\n        } else {\\n            $row[\'thumbnail\'] = file_exists(MODX_ASSETS_PATH . $extDir . $row[\'type\'] . \'.png\')\\n                ? MODX_ASSETS_URL . $extDir . $row[\'type\'] . \'.png\'\\n                : MODX_ASSETS_URL . $extDir . \'other.png\';\\n            if (!empty($resolution)) {\\n                foreach ($resolution as $v) {\\n                    $row[$v] = $row[\'thumbnail\'];\\n                }\\n            }\\n        }\\n    }\\n\\n\\n    if (!empty($getTags)) {\\n        $q = $modx->newQuery(\'msResourceFileTag\', array(\'file_id\' => $row[\'id\']));\\n        $q->select(\'tag\');\\n        $tstart = microtime(true);\\n        if ($q->prepare() && $q->stmt->execute()) {\\n            $modx->queryTime += microtime(true) - $tstart;\\n            $modx->executedQueries++;\\n            $row[\'tags\'] = implode($tagsSeparator, $q->stmt->fetchAll(PDO::FETCH_COLUMN));\\n        }\\n    }\\n\\n    $images[] = $row;\\n}\\n$pdoFetch->addTime(!empty($getTags) ? \'Thumbnails and tags was retrieved\' : \'Thumbnails was retrieved\');\\n\\n\\/\\/ Processing chunks\\n$output = array();\\nif ($fenom) {\\n    $output[] = $pdoFetch->getChunk($tpl, array(\\n        \'files\' => $images,\\n        \'images\' => $images,\\n    ));\\n} else {\\n    foreach ($images as $row) {\\n        $tpl = $pdoFetch->defineChunk($row);\\n\\n        $output[] = empty($tpl)\\n            ? \'<pre>\' . $pdoFetch->getChunk(\'\', $row) . \'<\\/pre>\'\\n            : $pdoFetch->getChunk($tpl, $row, $pdoFetch->config[\'fastMode\']);\\n    }\\n}\\n$pdoFetch->addTime(\'Rows was templated\');\\n\\n\\/\\/ Return output\\n$log = \'\';\\nif ($modx->user->hasSessionContext(\'mgr\') && !empty($showLog)) {\\n    $log .= \'<pre class=\\"ms2GalleryLog\\">\' . print_r($pdoFetch->getTime(), 1) . \'<\\/pre>\';\\n}\\n\\nif (!$fenom) {\\n    if (!empty($toSeparatePlaceholders)) {\\n        $output[\'log\'] = $log;\\n        $modx->setPlaceholders($output, $toSeparatePlaceholders);\\n\\n        return;\\n    }\\n    if (count($output) === 1 && !empty($tplSingle)) {\\n        $output = $pdoFetch->getChunk($tplSingle, array_shift($images));\\n    } else {\\n        $output = implode($outputSeparator, $output);\\n\\n        if (!empty($output)) {\\n            $arr = array_shift($images);\\n            $arr[\'rows\'] = $output;\\n            $arr[\'images\'] = $images;\\n            if (!empty($tplOuter)) {\\n                $output = $pdoFetch->getChunk($tplOuter, $arr);\\n            }\\n        } else {\\n            $output = !empty($tplEmpty)\\n                ? $pdoFetch->getChunk($tplEmpty)\\n                : \'\';\\n        }\\n    }\\n}\\n\\nif (is_array($output)) {\\n    $output = implode($outputSeparator, $output);\\n}\\n$output .= $log;\\nif (!empty($toPlaceholder)) {\\n    $modx->setPlaceholder($toPlaceholder, $output);\\n} else {\\n    return $output;\\n}"}',
        'guid' => '188509774c3d18b64b5bc2c7955624b3',
        'native_key' => 0,
        'signature' => 'ddea898d130103166a12c31a6c11748e',
      ),
      'e6c4b10137fde0a13cfac89e968cc23e' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":0,"source":1,"property_preprocess":0,"name":"ms2GalleryResources","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/** @var array $scriptProperties *\\/\\n$class = $modx->getOption(\'class\', $scriptProperties, \'modResource\', true);\\n$snippet = $modx->getOption(\'snippet\', $scriptProperties, \'pdoResources\', true);\\n\\n\\/\\/ Load model\\nif (empty($loadModels)) {\\n    $scriptProperties[\'loadModels\'] = \'ms2gallery\';\\n} else {\\n    $loadModels = array_map(\'trim\', explode(\',\', $loadModels));\\n    if (!in_array(\'ms2gallery\', $loadModels)) {\\n        $loadModels[] = \'ms2gallery\';\\n    }\\n    $scriptProperties[\'loadModels\'] = $loadModels;\\n}\\n\\n\\/\\/ Type of join\\nif (empty($typeOfJoin)) {\\n    $typeOfJoin = \'left\';\\n}\\nswitch (strtolower(trim($typeOfJoin))) {\\n    case \'right\':\\n        $join = \'rightJoin\';\\n        break;\\n    case \'inner\':\\n        $join = \'innerJoin\';\\n        break;\\n    default:\\n        $join = \'leftJoin\';\\n        break;\\n}\\n\\n\\/\\/ Select modResource\\n$columns = array_keys($modx->getFieldMeta($class));\\nif (empty($includeContent) && empty($useWeblinkUrl)) {\\n    $key = array_search(\'content\', $columns);\\n    unset($columns[$key]);\\n}\\n$select = array(\\n    $class => implode(\',\', $columns),\\n);\\n\\n\\/\\/ Include Thumbnails\\n${$join} = array();\\nif (empty($includeThumbs)) {\\n    $includeThumbs = \'small\';\\n}\\n$thumbs = array_map(\'trim\', explode(\',\', $includeThumbs));\\nif (!empty($thumbs[0])) {\\n    foreach ($thumbs as $thumb) {\\n        ${$join}[] = array(\\n            \'class\' => \'msResourceFile\',\\n            \'alias\' => $thumb,\\n            \'on\' => implode(\' AND \', array(\\n                \\"`$thumb`.`resource_id` = `$class`.`id`\\",\\n                \\"`$thumb`.`parent` != 0\\",\\n                \\"`$thumb`.`path` LIKE \'%\\/$thumb\\/%\'\\",\\n                \\"`$thumb`.`active` = 1\\",\\n                \\"`$thumb`.`rank` = 0\\",\\n            )),\\n        );\\n        $select[$thumb] = implode(\',\', array(\\n            \\"`$thumb`.`url` as `$thumb`\\",\\n            \\"`$thumb`.`name` as `$thumb.name`\\",\\n            \\"`$thumb`.`description` as `$thumb.description`\\",\\n            \\"`$thumb`.`createdon` as `$thumb.createdon`\\",\\n            \\"`$thumb`.`createdby` as `$thumb.createdby`\\",\\n            \\"`$thumb`.`properties` as `$thumb.properties`\\",\\n            \\"`$thumb`.`alt` as `$thumb.alt`\\",\\n            \\"`$thumb`.`add` as `$thumb.add`\\",\\n        ));\\n\\n        if (!empty($includeOriginal)) {\\n            ${$join}[] = array(\\n                \'class\' => \'msResourceFile\',\\n                \'alias\' => $thumb . \'o\',\\n                \'on\' => \\"`{$thumb}o`.`id` = `$thumb`.`parent`\\",\\n            );\\n            $select[$thumb] .= \\", `{$thumb}o`.`url` as `$thumb.original`\\";\\n        }\\n    }\\n}\\n\\nforeach (array(\'leftJoin\', \'innerJoin\', \'rightJoin\', \'select\') as $v) {\\n    if (!empty($scriptProperties[$v])) {\\n        $tmp = json_decode($scriptProperties[$v], true);\\n        if (is_array($tmp)) {\\n            $$v = array_merge($$v, $tmp);\\n        }\\n    }\\n    unset($scriptProperties[$v]);\\n}\\n$scriptProperties[\'select\'] = json_encode($select);\\n\\/\\/$scriptProperties[\'groupby\'] = $class . \'.id\';\\n$scriptProperties[$join] = json_encode(${$join});\\n\\nreturn $modx->runSnippet($snippet, $scriptProperties);","locked":0,"properties":"a:3:{s:10:\\"typeOfJoin\\";a:7:{s:4:\\"name\\";s:10:\\"typeOfJoin\\";s:4:\\"desc\\";s:26:\\"ms2gallery_prop_typeOfJoin\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:4:\\"left\\";s:5:\\"value\\";s:4:\\"left\\";}i:1;a:2:{s:4:\\"text\\";s:5:\\"inner\\";s:5:\\"value\\";s:5:\\"inner\\";}}s:5:\\"value\\";s:4:\\"left\\";s:7:\\"lexicon\\";s:21:\\"ms2gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"includeThumbs\\";a:7:{s:4:\\"name\\";s:13:\\"includeThumbs\\";s:4:\\"desc\\";s:29:\\"ms2gallery_prop_includeThumbs\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:5:\\"small\\";s:7:\\"lexicon\\";s:21:\\"ms2gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"includeOriginal\\";a:7:{s:4:\\"name\\";s:15:\\"includeOriginal\\";s:4:\\"desc\\";s:31:\\"ms2gallery_prop_includeOriginal\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:21:\\"ms2gallery:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"core\\/components\\/ms2gallery\\/elements\\/snippets\\/snippet.ms2gallery_resources.php","content":"\\/** @var array $scriptProperties *\\/\\n$class = $modx->getOption(\'class\', $scriptProperties, \'modResource\', true);\\n$snippet = $modx->getOption(\'snippet\', $scriptProperties, \'pdoResources\', true);\\n\\n\\/\\/ Load model\\nif (empty($loadModels)) {\\n    $scriptProperties[\'loadModels\'] = \'ms2gallery\';\\n} else {\\n    $loadModels = array_map(\'trim\', explode(\',\', $loadModels));\\n    if (!in_array(\'ms2gallery\', $loadModels)) {\\n        $loadModels[] = \'ms2gallery\';\\n    }\\n    $scriptProperties[\'loadModels\'] = $loadModels;\\n}\\n\\n\\/\\/ Type of join\\nif (empty($typeOfJoin)) {\\n    $typeOfJoin = \'left\';\\n}\\nswitch (strtolower(trim($typeOfJoin))) {\\n    case \'right\':\\n        $join = \'rightJoin\';\\n        break;\\n    case \'inner\':\\n        $join = \'innerJoin\';\\n        break;\\n    default:\\n        $join = \'leftJoin\';\\n        break;\\n}\\n\\n\\/\\/ Select modResource\\n$columns = array_keys($modx->getFieldMeta($class));\\nif (empty($includeContent) && empty($useWeblinkUrl)) {\\n    $key = array_search(\'content\', $columns);\\n    unset($columns[$key]);\\n}\\n$select = array(\\n    $class => implode(\',\', $columns),\\n);\\n\\n\\/\\/ Include Thumbnails\\n${$join} = array();\\nif (empty($includeThumbs)) {\\n    $includeThumbs = \'small\';\\n}\\n$thumbs = array_map(\'trim\', explode(\',\', $includeThumbs));\\nif (!empty($thumbs[0])) {\\n    foreach ($thumbs as $thumb) {\\n        ${$join}[] = array(\\n            \'class\' => \'msResourceFile\',\\n            \'alias\' => $thumb,\\n            \'on\' => implode(\' AND \', array(\\n                \\"`$thumb`.`resource_id` = `$class`.`id`\\",\\n                \\"`$thumb`.`parent` != 0\\",\\n                \\"`$thumb`.`path` LIKE \'%\\/$thumb\\/%\'\\",\\n                \\"`$thumb`.`active` = 1\\",\\n                \\"`$thumb`.`rank` = 0\\",\\n            )),\\n        );\\n        $select[$thumb] = implode(\',\', array(\\n            \\"`$thumb`.`url` as `$thumb`\\",\\n            \\"`$thumb`.`name` as `$thumb.name`\\",\\n            \\"`$thumb`.`description` as `$thumb.description`\\",\\n            \\"`$thumb`.`createdon` as `$thumb.createdon`\\",\\n            \\"`$thumb`.`createdby` as `$thumb.createdby`\\",\\n            \\"`$thumb`.`properties` as `$thumb.properties`\\",\\n            \\"`$thumb`.`alt` as `$thumb.alt`\\",\\n            \\"`$thumb`.`add` as `$thumb.add`\\",\\n        ));\\n\\n        if (!empty($includeOriginal)) {\\n            ${$join}[] = array(\\n                \'class\' => \'msResourceFile\',\\n                \'alias\' => $thumb . \'o\',\\n                \'on\' => \\"`{$thumb}o`.`id` = `$thumb`.`parent`\\",\\n            );\\n            $select[$thumb] .= \\", `{$thumb}o`.`url` as `$thumb.original`\\";\\n        }\\n    }\\n}\\n\\nforeach (array(\'leftJoin\', \'innerJoin\', \'rightJoin\', \'select\') as $v) {\\n    if (!empty($scriptProperties[$v])) {\\n        $tmp = json_decode($scriptProperties[$v], true);\\n        if (is_array($tmp)) {\\n            $$v = array_merge($$v, $tmp);\\n        }\\n    }\\n    unset($scriptProperties[$v]);\\n}\\n$scriptProperties[\'select\'] = json_encode($select);\\n\\/\\/$scriptProperties[\'groupby\'] = $class . \'.id\';\\n$scriptProperties[$join] = json_encode(${$join});\\n\\nreturn $modx->runSnippet($snippet, $scriptProperties);"}',
        'guid' => '443833470148978364ab5b69a213e40b',
        'native_key' => 0,
        'signature' => '5b67fbcf011b569273f9743d6b61c9b1',
      ),
    ),
    'Plugins' => 
    array (
      '511cc0fffa7b86e21cd34b87ff9a69e9' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modPlugin',
        'object' => '{"id":0,"source":1,"property_preprocess":0,"name":"ms2Gallery","description":"Main plugin for ms2Gallery","editor_type":0,"category":0,"cache_type":0,"plugincode":"\\/** @var modX $modx *\\/\\n\\/** @var array $scriptProperties *\\/\\nswitch ($modx->event->name) {\\n\\n    case \'OnDocFormRender\':\\n        \\/** @var modResource $resource *\\/\\n        $templates = array_map(\'trim\', explode(\',\', $modx->getOption(\'ms2gallery_disable_for_templates\')));\\n        $disable = $mode == \'new\' ||\\n            ($templates[0] != \'\' && in_array($resource->get(\'template\'), $templates)) ||\\n            ($resource->class_key == \'msProduct\' &&\\n                $modx->getOption(\'ms2gallery_disable_for_ms2\', null, true) &&\\n                !$modx->getOption(\'ms2gallery_sync_ms2\', null, false)\\n            );\\n        if (!$disable) {\\n            \\/** @var ms2Gallery $ms2Gallery *\\/\\n            $ms2Gallery = $modx->getService(\'ms2gallery\', \'ms2Gallery\',\\n                MODX_CORE_PATH . \'components\\/ms2gallery\\/model\\/ms2gallery\\/\');\\n            if ($ms2Gallery) {\\n                $ms2Gallery->loadManagerFiles($modx->controller, $resource);\\n            }\\n        }\\n        break;\\n\\n    case \'OnBeforeDocFormSave\':\\n        if ($source_id = $resource->get(\'media_source\')) {\\n            $resource->setProperties(array(\'media_source\' => $source_id), \'ms2gallery\');\\n        }\\n        break;\\n\\n    case \'OnLoadWebDocument\':\\n        if (!$modx->getOption(\'ms2gallery_set_placeholders\', null, false, true)) {\\n            return;\\n        }\\n        $tstart = microtime(true);\\n        \\/** @var pdoFetch $pdoFetch *\\/\\n        $pdoFetch = $modx->getService(\'pdoFetch\');\\n        $plTemplates = array_map(\'trim\', explode(\',\', $modx->getOption(\'ms2gallery_placeholders_for_templates\')));\\n        if (!empty($plTemplates[0]) && !in_array($modx->resource->get(\'template\'), $plTemplates)) {\\n            return;\\n        }\\n        $plPrefix = $modx->getOption(\'ms2gallery_placeholders_prefix\', null, \'ms2g.\', true);\\n        $plThumbs = array_map(\'trim\', explode(\',\', $modx->getOption(\'ms2gallery_placeholders_thumbs\')));\\n        $tplName = $modx->getOption(\'ms2gallery_placeholders_tpl\');\\n\\n        \\/\\/ Check for assigned TV\\n        $q = $modx->newQuery(\'modTemplateVarTemplate\');\\n        $q->innerJoin(\'modTemplateVar\', \'TemplateVar\');\\n        $q->innerJoin(\'modTemplate\', \'Template\');\\n        $q->where(array(\\n            \'TemplateVar.name\' => $tplName,\\n            \'Template.id\' => $modx->resource->get(\'template\'),\\n        ));\\n        $q->select(\'TemplateVar.id\');\\n        $tpl = $modx->getCount(\'modTemplateVarTemplate\', $q)\\n            ? \'@INLINE \' . $modx->resource->getTVValue($tplName)\\n            : $tplName;\\n\\n        $options = array(\'loadModels\' => \'ms2gallery\');\\n        $where = array(\'resource_id\' => $modx->resource->id, \'parent\' => 0);\\n\\n        $parents = $pdoFetch->getCollection(\'msResourceFile\', $where, $options);\\n        $options[\'select\'] = \'url\';\\n        foreach ($parents as &$parent) {\\n            $where = array(\'parent\' => $parent[\'id\']);\\n            if (!empty($plThumbs[0])) {\\n                $where[\'path:IN\'] = array();\\n                foreach ($plThumbs as $thumb) {\\n                    $where[\'path:IN\'][] = $parent[\'path\'] . $thumb . \'\\/\';\\n                }\\n            }\\n            if ($children = $pdoFetch->getCollection(\'msResourceFile\', $where, $options)) {\\n                foreach ($children as $child) {\\n                    if (preg_match(\\"#\\/{$parent[\'resource_id\']}\\/(.*?)\\/#\\", $child[\'url\'], $size)) {\\n                        $parent[$size[1]] = $child[\'url\'];\\n                    }\\n                }\\n            }\\n            $pls = $pdoFetch->makePlaceholders($parent, $plPrefix . $parent[\'rank\'] . \'.\', \'[[+\', \']]\', false);\\n            $pls[\'vl\'][$plPrefix . $parent[\'rank\']] = $pdoFetch->getChunk($tpl, $parent);\\n            $modx->setPlaceholders($pls[\'vl\']);\\n        }\\n\\n        $modx->log(modX::LOG_LEVEL_INFO, \'[ms2Gallery] Set image placeholders for page id = \' . $modx->resource->id .\\n            \' in \' . number_format(microtime(true) - $tstart, 7) . \' sec.\');\\n        break;\\n\\n    case \'OnBeforeEmptyTrash\':\\n        if (empty($scriptProperties[\'ids\']) || !is_array($scriptProperties[\'ids\'])) {\\n            return;\\n        }\\n        if (!$modx->addPackage(\'ms2gallery\', MODX_CORE_PATH . \'components\\/ms2gallery\\/model\\/\')) {\\n            return;\\n        }\\n        $resources = $modx->getIterator(\'modResource\', array(\'id:IN\' => $scriptProperties[\'ids\']));\\n        \\/** @var modResource $resource *\\/\\n        foreach ($resources as $resource) {\\n            $properties = $resource->getProperties(\'ms2gallery\');\\n            if (!empty($properties[\'media_source\'])) {\\n                \\/** @var modMediaSource $source *\\/\\n                $source = $modx->getObject(\'modMediaSource\', $properties[\'media_source\']);\\n                $resource_id = $resource->get(\'id\');\\n                if ($source) {\\n                    $source->set(\'ctx\', $resource->get(\'context_key\'));\\n                    $source->initialize();\\n                }\\n                $images = $modx->getIterator(\'msResourceFile\', array(\'resource_id\' => $resource_id, \'parent\' => 0));\\n                \\/** @var msResourceFile $image *\\/\\n                foreach ($images as $image) {\\n                    $prepare = $image->prepareSource($source);\\n                    if ($prepare === true) {\\n                        $image->remove();\\n                    } else {\\n                        $modx->log(modX::LOG_LEVEL_ERROR, \\"[ms2Gallery] {$prepare}.\\");\\n                    }\\n                }\\n                if ($source) {\\n                    $source->removeContainer($source->getBasePath() . $resource_id);\\n                }\\n            }\\n        }\\n        break;\\n\\n}","locked":0,"properties":null,"disabled":0,"moduleguid":"","static":0,"static_file":"core\\/components\\/ms2gallery\\/elements\\/plugins\\/plugin.ms2gallery.php","content":"\\/** @var modX $modx *\\/\\n\\/** @var array $scriptProperties *\\/\\nswitch ($modx->event->name) {\\n\\n    case \'OnDocFormRender\':\\n        \\/** @var modResource $resource *\\/\\n        $templates = array_map(\'trim\', explode(\',\', $modx->getOption(\'ms2gallery_disable_for_templates\')));\\n        $disable = $mode == \'new\' ||\\n            ($templates[0] != \'\' && in_array($resource->get(\'template\'), $templates)) ||\\n            ($resource->class_key == \'msProduct\' &&\\n                $modx->getOption(\'ms2gallery_disable_for_ms2\', null, true) &&\\n                !$modx->getOption(\'ms2gallery_sync_ms2\', null, false)\\n            );\\n        if (!$disable) {\\n            \\/** @var ms2Gallery $ms2Gallery *\\/\\n            $ms2Gallery = $modx->getService(\'ms2gallery\', \'ms2Gallery\',\\n                MODX_CORE_PATH . \'components\\/ms2gallery\\/model\\/ms2gallery\\/\');\\n            if ($ms2Gallery) {\\n                $ms2Gallery->loadManagerFiles($modx->controller, $resource);\\n            }\\n        }\\n        break;\\n\\n    case \'OnBeforeDocFormSave\':\\n        if ($source_id = $resource->get(\'media_source\')) {\\n            $resource->setProperties(array(\'media_source\' => $source_id), \'ms2gallery\');\\n        }\\n        break;\\n\\n    case \'OnLoadWebDocument\':\\n        if (!$modx->getOption(\'ms2gallery_set_placeholders\', null, false, true)) {\\n            return;\\n        }\\n        $tstart = microtime(true);\\n        \\/** @var pdoFetch $pdoFetch *\\/\\n        $pdoFetch = $modx->getService(\'pdoFetch\');\\n        $plTemplates = array_map(\'trim\', explode(\',\', $modx->getOption(\'ms2gallery_placeholders_for_templates\')));\\n        if (!empty($plTemplates[0]) && !in_array($modx->resource->get(\'template\'), $plTemplates)) {\\n            return;\\n        }\\n        $plPrefix = $modx->getOption(\'ms2gallery_placeholders_prefix\', null, \'ms2g.\', true);\\n        $plThumbs = array_map(\'trim\', explode(\',\', $modx->getOption(\'ms2gallery_placeholders_thumbs\')));\\n        $tplName = $modx->getOption(\'ms2gallery_placeholders_tpl\');\\n\\n        \\/\\/ Check for assigned TV\\n        $q = $modx->newQuery(\'modTemplateVarTemplate\');\\n        $q->innerJoin(\'modTemplateVar\', \'TemplateVar\');\\n        $q->innerJoin(\'modTemplate\', \'Template\');\\n        $q->where(array(\\n            \'TemplateVar.name\' => $tplName,\\n            \'Template.id\' => $modx->resource->get(\'template\'),\\n        ));\\n        $q->select(\'TemplateVar.id\');\\n        $tpl = $modx->getCount(\'modTemplateVarTemplate\', $q)\\n            ? \'@INLINE \' . $modx->resource->getTVValue($tplName)\\n            : $tplName;\\n\\n        $options = array(\'loadModels\' => \'ms2gallery\');\\n        $where = array(\'resource_id\' => $modx->resource->id, \'parent\' => 0);\\n\\n        $parents = $pdoFetch->getCollection(\'msResourceFile\', $where, $options);\\n        $options[\'select\'] = \'url\';\\n        foreach ($parents as &$parent) {\\n            $where = array(\'parent\' => $parent[\'id\']);\\n            if (!empty($plThumbs[0])) {\\n                $where[\'path:IN\'] = array();\\n                foreach ($plThumbs as $thumb) {\\n                    $where[\'path:IN\'][] = $parent[\'path\'] . $thumb . \'\\/\';\\n                }\\n            }\\n            if ($children = $pdoFetch->getCollection(\'msResourceFile\', $where, $options)) {\\n                foreach ($children as $child) {\\n                    if (preg_match(\\"#\\/{$parent[\'resource_id\']}\\/(.*?)\\/#\\", $child[\'url\'], $size)) {\\n                        $parent[$size[1]] = $child[\'url\'];\\n                    }\\n                }\\n            }\\n            $pls = $pdoFetch->makePlaceholders($parent, $plPrefix . $parent[\'rank\'] . \'.\', \'[[+\', \']]\', false);\\n            $pls[\'vl\'][$plPrefix . $parent[\'rank\']] = $pdoFetch->getChunk($tpl, $parent);\\n            $modx->setPlaceholders($pls[\'vl\']);\\n        }\\n\\n        $modx->log(modX::LOG_LEVEL_INFO, \'[ms2Gallery] Set image placeholders for page id = \' . $modx->resource->id .\\n            \' in \' . number_format(microtime(true) - $tstart, 7) . \' sec.\');\\n        break;\\n\\n    case \'OnBeforeEmptyTrash\':\\n        if (empty($scriptProperties[\'ids\']) || !is_array($scriptProperties[\'ids\'])) {\\n            return;\\n        }\\n        if (!$modx->addPackage(\'ms2gallery\', MODX_CORE_PATH . \'components\\/ms2gallery\\/model\\/\')) {\\n            return;\\n        }\\n        $resources = $modx->getIterator(\'modResource\', array(\'id:IN\' => $scriptProperties[\'ids\']));\\n        \\/** @var modResource $resource *\\/\\n        foreach ($resources as $resource) {\\n            $properties = $resource->getProperties(\'ms2gallery\');\\n            if (!empty($properties[\'media_source\'])) {\\n                \\/** @var modMediaSource $source *\\/\\n                $source = $modx->getObject(\'modMediaSource\', $properties[\'media_source\']);\\n                $resource_id = $resource->get(\'id\');\\n                if ($source) {\\n                    $source->set(\'ctx\', $resource->get(\'context_key\'));\\n                    $source->initialize();\\n                }\\n                $images = $modx->getIterator(\'msResourceFile\', array(\'resource_id\' => $resource_id, \'parent\' => 0));\\n                \\/** @var msResourceFile $image *\\/\\n                foreach ($images as $image) {\\n                    $prepare = $image->prepareSource($source);\\n                    if ($prepare === true) {\\n                        $image->remove();\\n                    } else {\\n                        $modx->log(modX::LOG_LEVEL_ERROR, \\"[ms2Gallery] {$prepare}.\\");\\n                    }\\n                }\\n                if ($source) {\\n                    $source->removeContainer($source->getBasePath() . $resource_id);\\n                }\\n            }\\n        }\\n        break;\\n\\n}"}',
        'guid' => '58d58fee509b942d4c6ee2e4ecf98515',
        'native_key' => 0,
        'signature' => 'dc4eae67dfcc618e77d117385399f8ba',
        'related_objects' => 
        array (
          'PluginEvents' => 
          array (
            '281aee513e5af0979798d3b7f598f8b9' => 
            array (
              'preserve_keys' => true,
              'update_object' => true,
              'unique_key' => 
              array (
                0 => 'pluginid',
                1 => 'event',
              ),
              'class' => 'modPluginEvent',
              'object' => '{"pluginid":0,"event":"OnDocFormRender","priority":0,"propertyset":0}',
              'guid' => '69d7142c42dc14e091fedcb69ae4b28d',
              'native_key' => 
              array (
                0 => 0,
                1 => 'OnDocFormRender',
              ),
              'signature' => 'd3384e338375c1bcd21055bcc5f4ea81',
            ),
            '11aeda549e279409134e6ad2de978bcd' => 
            array (
              'preserve_keys' => true,
              'update_object' => true,
              'unique_key' => 
              array (
                0 => 'pluginid',
                1 => 'event',
              ),
              'class' => 'modPluginEvent',
              'object' => '{"pluginid":0,"event":"OnLoadWebDocument","priority":0,"propertyset":0}',
              'guid' => '8136e810d6af10d9a62eecb7f441f5b4',
              'native_key' => 
              array (
                0 => 0,
                1 => 'OnLoadWebDocument',
              ),
              'signature' => '49204e8f3aa9890477c84e4073f43c13',
            ),
            'd92f8dd9540c07ae53785abd11f2c0f4' => 
            array (
              'preserve_keys' => true,
              'update_object' => true,
              'unique_key' => 
              array (
                0 => 'pluginid',
                1 => 'event',
              ),
              'class' => 'modPluginEvent',
              'object' => '{"pluginid":0,"event":"OnBeforeDocFormSave","priority":0,"propertyset":0}',
              'guid' => '0ac92133a8b8d190fa7b7fbecc2129a3',
              'native_key' => 
              array (
                0 => 0,
                1 => 'OnBeforeDocFormSave',
              ),
              'signature' => '1c38b90f1392439d0831aa206c1b86c6',
            ),
            'd1109f6b2297f366893f564c89a3ad0e' => 
            array (
              'preserve_keys' => true,
              'update_object' => true,
              'unique_key' => 
              array (
                0 => 'pluginid',
                1 => 'event',
              ),
              'class' => 'modPluginEvent',
              'object' => '{"pluginid":0,"event":"OnBeforeEmptyTrash","priority":0,"propertyset":0}',
              'guid' => 'ba910041d77488d3f096841f094f0d48',
              'native_key' => 
              array (
                0 => 0,
                1 => 'OnBeforeEmptyTrash',
              ),
              'signature' => '1085fa38b85f7ab91d802b94794eb642',
            ),
          ),
        ),
      ),
    ),
  ),
  'related_object_attributes' => 
  array (
    'Snippets' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Chunks' => 
    array (
      'preserve_keys' => false,
      'update_object' => false,
      'unique_key' => 'name',
    ),
    'Plugins' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'PluginEvents' => 
    array (
      'preserve_keys' => true,
      'update_object' => true,
      'unique_key' => 
      array (
        0 => 'pluginid',
        1 => 'event',
      ),
    ),
  ),
  'namespace' => 'ms2gallery',
  'resolve' => 
  array (
    0 => 
    array (
      'type' => 'file',
      'body' => '{"source":"ms2gallery-2.0.8-pl\\/modCategory\\/1da575aa18c2a7277440781b6313112f\\/0\\/","target":"return MODX_ASSETS_PATH . \'components\\/\';","name":"ms2gallery"}',
    ),
    1 => 
    array (
      'type' => 'php',
      'body' => '{"source":"ms2gallery-2.0.8-pl\\/modCategory\\/1da575aa18c2a7277440781b6313112f.resolve.tables.resolver","type":"php","name":"resolve.tables"}',
    ),
    2 => 
    array (
      'type' => 'php',
      'body' => '{"source":"ms2gallery-2.0.8-pl\\/modCategory\\/1da575aa18c2a7277440781b6313112f.resolve.sources.resolver","type":"php","name":"resolve.sources"}',
    ),
    3 => 
    array (
      'type' => 'php',
      'body' => '{"source":"ms2gallery-2.0.8-pl\\/modCategory\\/1da575aa18c2a7277440781b6313112f.resolve.update.resolver","type":"php","name":"resolve.update"}',
    ),
    4 => 
    array (
      'type' => 'php',
      'body' => '{"source":"ms2gallery-2.0.8-pl\\/modCategory\\/1da575aa18c2a7277440781b6313112f.resolve.setup.resolver","type":"php","name":"resolve.setup"}',
    ),
    5 => 
    array (
      'type' => 'php',
      'body' => '{"source":"ms2gallery-2.0.8-pl\\/modCategory\\/1da575aa18c2a7277440781b6313112f.resolve.tv.resolver","type":"php","name":"resolve.tv"}',
    ),
    6 => 
    array (
      'type' => 'php',
      'body' => '{"source":"ms2gallery-2.0.8-pl\\/modCategory\\/1da575aa18c2a7277440781b6313112f.resolve.settings.resolver","type":"php","name":"resolve.settings"}',
    ),
  ),
  'validate' => NULL,
  'vehicle_package' => 'transport',
  'guid' => '7b4e35e3f8e0c3d9b7f3bae12a172c4c',
  'package' => 'modx',
  'class' => 'modCategory',
  'signature' => '1da575aa18c2a7277440781b6313112f',
  'native_key' => 1,
  'object' => '{"id":1,"parent":0,"category":"ms2Gallery","rank":0}',
);